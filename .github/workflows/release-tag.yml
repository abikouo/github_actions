name: tagging

on:
  workflow_call:
    inputs:
      branch_name:
        description: The branch name to create tag from.
        type: string
        default: ${{ github.base_ref }}
      release_publish:
        default: true
        description: Publish a new github release.
        type: boolean
      release_prefix:
        default: "Release"
        description: Prefix name of the release to create.
        type: string
    secrets:
      gh_token:
        required: true

jobs:
  push:
    if: "github.event.pull_request.merged == true"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch_name }}
          token: ${{ secrets.gh_token }}
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: install python libraries
        run: pip3 install yq
        shell: bash
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: extract tag name from 'galaxy.yml'
        id: read-tag
        run: echo "release_tag=$(yq -r '.version' 'galaxy.yml')" >> $GITHUB_OUTPUT
        shell: bash
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: create git tag and push to Github
        run: |
          git tag ${{ steps.read-tag.outputs.release_tag }}
          git push origin ${{ steps.read-tag.outputs.release_tag }}
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: Parse release content
        id: read-release
        run: |
          curl -o get_release_content_from_changelogrst.py https://raw.githubusercontent.com/abikouo/github_actions/release_v2/scripts/get_release_content_from_changelogrst.py
          python3 ./get_release_content_from_changelogrst.py --release-version ${{ steps.read-tag.outputs.release_tag }}
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.gh_token }}
        with:
          tag_name: ${{ steps.read-tag.outputs.release_tag }}
          release_name: "${{ inputs.release_prefix }} ${{ steps.read-tag.outputs.release_tag }}"
          body: ${{ steps.read-release.outputs.release_content }}
          draft: false
          prerelease: false
        if: ${{ (inputs.release_publish) && (steps.read-release.outputs.release_content != '') }}
