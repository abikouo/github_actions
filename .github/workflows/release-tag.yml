name: tagging

on:
  workflow_call:
    inputs:
      branch_name:
        description: The branch name to create tag from.
        type: string
        default: ${{ github.base_ref }}
      release_publish:
        default: true
        description: Publish a new github release.
        type: boolean
      release_prefix:
        default: "Release"
        description: Prefix name of the release to create.
        type: string
    secrets:
      # due to https://github.com/ad-m/github-push-action/issues/32 we are not using default GITHUB_TOKEN
      gh_token:
        required: true

jobs:
  push:
    if: "github.event.pull_request.merged == true"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch_name }}
          token: ${{ secrets.gh_token }}
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: install python libraries
        run: pip3 install yq pygithub
        shell: bash
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: extract tag name from 'galaxy.yml'
        id: read-tag
        run: echo "release_tag=$(yq -r '.version' 'galaxy.yml')" >> $GITHUB_OUTPUT
        shell: bash
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: create tag
        run: |
          curl -o create_github_tag.py https://raw.githubusercontent.com/abikouo/github_actions/release_v2/scripts/create_github_tag.py
          python3 ./create_github_tag.py --repository ${{ github.repository }} --tag ${{ steps.read-tag.outputs.release_tag }} --branch ${{ inputs.branch_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.gh_token }}
        if: "contains(github.event.pull_request.labels.*.name, 'ok-to-tag')"

      - name: Parse release content
        run: |
          curl -o create_github_release.py https://raw.githubusercontent.com/abikouo/github_actions/release_v2/scripts/create_github_release.py
          python3 ./create_github_release.py --repository ${{ github.repository }} --release-tag ${{ steps.read-tag.outputs.release_tag }} --release-name "${{ inputs.release_prefix }} ${{ steps.read-tag.outputs.release_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.gh_token }}
        if: ${{ (inputs.release_publish) && contains(github.event.pull_request.labels.*.name, 'ok-to-tag') }}
