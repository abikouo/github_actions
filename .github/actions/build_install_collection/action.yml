name: Build and install the collection
description: Build and install the collection

inputs:
  install_python_dependencies:
    description: "Install collection python dependencies"
    required: true
  source_path:
    description: "Path to the collection source"
    required: true
  collection_path:
    description: The final collection path
    required: true
  tar_file:
    description: The collection tarball when built
    required: true

runs:
  using: composite
  steps:
    - name: install ansible-network/releases
      run: pip install git+https://github.com/ansible-network/releases
      shell: bash

    - name: check if ansible-playbook is installed
      id: ansible_check
      shell: bash
      run: |
        if ! command -v ansible-playbook &> /dev/null; then
          echo "ansible_installed=false" >> $GITHUB_OUTPUT
        else
          echo "ansible_installed=true" >> $GITHUB_OUTPUT
        fi

    - name: Install ansible-core (stable-2.12)
      run: python3 -m pip install https://github.com/ansible/ansible/archive/stable-2.12.tar.gz --disable-pip-version-check
      shell: bash
      if: steps.ansible_check.outputs.ansible_installed == 'false'

    - name: check if collection contains file tools/prepare_release.yml
      id: prepare_release_check
      shell: bash
      run: |
        if test -f "tools/prepare_release.yml"; then
          echo "file_exists=true" >> $GITHUB_OUTPUT
        else
          echo "file_exists=false" >> $GITHUB_OUTPUT
        fi
      working-directory: ${{ inputs.source_path }}

    - name: Run tools/prepare_release.yml
      run: ansible-playbook tools/prepare_release.yml -v
      shell: bash
      working-directory: ${{ inputs.source_path }}
      if: steps.prepare_release_check.outputs.file_exists == 'true'

    - name: check if collection contains galaxy.yml
      id: galaxy_check
      shell: bash
      run: |
        if test -f "galaxy.yml"; then
          echo "file_exists=true" >> $GITHUB_OUTPUT
        else
          echo "file_exists=false" >> $GITHUB_OUTPUT
        fi
      working-directory: ${{ inputs.source_path }}

    - name: Generate version number for ansible collection
      run: generate-ansible-collection
      shell: bash
      working-directory: ${{ inputs.source_path }}
      if: steps.galaxy_check.outputs.file_exists == 'true'

    - name: Read collection metadata from galaxy.yml (this is needed for collection on which galaxy.yml is generated)
      id: identify
      uses: ansible-network/github_actions/.github/actions/identify_collection@main
      with:
        source_path: ${{ inputs.source_path }}

    - name: Show the galaxy.yml
      run: cat galaxy.yml
      shell: bash
      working-directory: ${{ inputs.source_path }}

    - name: Install bindep from pypi
      run: sudo python3 -m pip install bindep
      shell: bash

    - name: check if bindep.txt exists
      id: bindep_check
      shell: bash
      run: |
        if test -f "bindep.txt"; then
          echo "file_exists=true" >> $GITHUB_OUTPUT
        else
          echo "file_exists=false" >> $GITHUB_OUTPUT
        fi
      working-directory: ${{ inputs.source_path }}

    - name: Install missing system packages using bindep.txt
      run: bindep test | tail -n +2 | xargs sudo apt-get -o Debug::pkgProblemResolver=true -o Debug::Acquire::http=true install -y || exit 0
      shell: bash
      working-directory: ${{ inputs.source_path }}
      if: steps.bindep_check.outputs.file_exists == 'true'

    - name: Check for missing system packages using bindep.txt
      run: bindep test
      shell: bash
      working-directory: ${{ inputs.source_path }}
      if: steps.bindep_check.outputs.file_exists == 'true'

    - name: Install collection python requirements
      if: ${{ inputs.install_python_dependencies == 'true' }}
      run: python3 -m pip install -r requirements.txt -r test-requirements.txt
      shell: bash
      working-directory: ${{ inputs.source_path }}

    - name: Build collection
      run: ansible-galaxy collection build -vvv
      shell: bash
      working-directory: ${{ inputs.source_path }}

    - name: Install collection and dependencies
      run: ansible-galaxy collection install ./${{ steps.identify.outputs.tar_file || inputs.tar_file }} -p /home/runner/collections
      shell: bash
      working-directory: ${{ inputs.source_path }}

    - name: Copy the galaxy.yml from source to destination, needed for pytest-ansible-units
      run: cp galaxy.yml ${{ steps.identify.outputs.collection_path || inputs.collection_path }}/galaxy.yml
      shell: bash
      working-directory: ${{ inputs.source_path }}
